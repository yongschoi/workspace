node {
    def remote = [:]
    remote.name = 'ubuntu19'
    remote.host = '10.0.2.15'
    remote.allowAnyHosts = true

    try {
        notification('STARTED')

        withCredentials([usernamePassword(credentialsId: '7a91232a-dc84-4a2e-a81b-2930a9b4f286', passwordVariable: 'passwd', usernameVariable: 'usernm')]) {
            remote.user = usernm
            remote.password = passwd

            stage ('Remote SSH : checkout') {
                echo "Remote SSH : checkout"
                sshCommand remote: remote, command: "/home/yongschoi/test/example-batchmanager/build/checkout.sh"
            }

            stage ('Remote SSH : test') {
                echo "Remote SSH : test"
                sshCommand remote: remote, command: "/home/yongschoi/test/example-batchmanager/build/test.sh"
            }

            stage ('Remote SSH : build') {
                echo "Remote SSH : build"
                sshCommand remote: remote, command: "/home/yongschoi/test/example-batchmanager/build/build.sh"
            }

            stage ('Remote SSH : dockerize') {
                echo "Remote SSH : dockerize"
                sshCommand remote: remote, command: "/home/yongschoi/test/example-batchmanager/build/dockerize.sh"
            }

            stage ('Romote SSH : deploy') {
                echo "Remote SSH : deploy"
                sshCommand remote: remote, command: "/home/yongschoi/test/example-batchmanager/deploy/run.sh"
            }
        }

    } catch (e) {
        // If there was an exception thrown, the build failed
        currentBuild.result = "FAILED"
        throw e
    } finally {
        // Success or failure, always send notifications
        notification(currentBuild.result)
    }
}

def notification(String buildStatus = 'STARTED') {
    // build status of null means successful
    buildStatus =  buildStatus ?: 'SUCCESSFUL'

    // Default values
    def colorName = 'RED'
    def colorCode = '#FF0000'
    def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
    def summary = "${subject} (${env.BUILD_URL})"

    // Override default values based on build status
    if (buildStatus == 'STARTED') {
        color = 'YELLOW'
        colorCode = '#FFFF00'
    } else if (buildStatus == 'SUCCESSFUL') {
        color = 'GREEN'
        colorCode = '#00FF00'
    } else {
        color = 'RED'
        colorCode = '#FF0000'
    }

    // Send notifications
    slackSend (color: colorCode, message: summary)
}
